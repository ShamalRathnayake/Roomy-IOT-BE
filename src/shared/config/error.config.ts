export enum ErrorCode {
  BAD_REQUEST = 'BAD_REQUEST',
  UNAUTHORIZED = 'UNAUTHORIZED',
  FORBIDDEN = 'FORBIDDEN',
  NOT_FOUND = 'NOT_FOUND',
  CONFLICT = 'CONFLICT',
  VALIDATION_ERROR = 'VALIDATION_ERROR',
  UNSUPPORTED_MEDIA_TYPE = 'UNSUPPORTED_MEDIA_TYPE',
  UNPROCESSABLE_ENTITY = 'UNPROCESSABLE_ENTITY',
  TOO_MANY_REQUESTS = 'TOO_MANY_REQUESTS',
  PAYLOAD_TOO_LARGE = 'PAYLOAD_TOO_LARGE',
  FILE_TOO_LARGE = 'FILE_TOO_LARGE',
  UNSUPPORTED_FILE_TYPE = 'UNSUPPORTED_FILE_TYPE',
  INVALID_CREDENTIALS = 'INVALID_CREDENTIALS',
  INVALID_TOKEN = 'INVALID_TOKEN',
  EXPIRED_TOKEN = 'EXPIRED_TOKEN',
  MISSING_PARAMETERS = 'MISSING_PARAMETERS',
  INTERNAL_ERROR = 'INTERNAL_ERROR',
  DEPENDENCY_FAILURE = 'DEPENDENCY_FAILURE',
  SERVICE_UNAVAILABLE = 'SERVICE_UNAVAILABLE',
  TIMEOUT = 'TIMEOUT',
  DATABASE_ERROR = 'DATABASE_ERROR',
  UNEXPECTED_ERROR = 'UNEXPECTED_ERROR',
}

export const ErrorMessages: Record<ErrorCode, string> = {
  [ErrorCode.BAD_REQUEST]: 'The request could not be understood by the server.',
  [ErrorCode.VALIDATION_ERROR]: 'One or more validation errors occurred.',
  [ErrorCode.UNSUPPORTED_MEDIA_TYPE]: 'Unsupported media type.',
  [ErrorCode.UNPROCESSABLE_ENTITY]:
    'The server understands the content type but was unable to process the contained instructions.',
  [ErrorCode.PAYLOAD_TOO_LARGE]: 'The request payload is too large.',
  [ErrorCode.FILE_TOO_LARGE]: 'The uploaded file exceeds the allowed size.',
  [ErrorCode.UNSUPPORTED_FILE_TYPE]: 'Uploaded file type is unsupported.',
  [ErrorCode.MISSING_PARAMETERS]:
    'Required parameters are missing from the request.',
  [ErrorCode.UNAUTHORIZED]: 'Authentication is required.',
  [ErrorCode.INVALID_CREDENTIALS]: 'Invalid username or password.',
  [ErrorCode.INVALID_TOKEN]: 'Provided token is invalid.',
  [ErrorCode.EXPIRED_TOKEN]: 'Authentication token has expired.',
  [ErrorCode.FORBIDDEN]: 'Access is forbidden.',
  [ErrorCode.NOT_FOUND]: 'The requested resource was not found.',
  [ErrorCode.CONFLICT]: 'Conflict with the current state of the resource.',
  [ErrorCode.TOO_MANY_REQUESTS]: 'Too many requests. Please try again later.',
  [ErrorCode.INTERNAL_ERROR]: 'An internal server error occurred.',
  [ErrorCode.UNEXPECTED_ERROR]: 'An unexpected error occurred.',
  [ErrorCode.DEPENDENCY_FAILURE]: 'A dependent service or module failed.',
  [ErrorCode.SERVICE_UNAVAILABLE]: 'The service is temporarily unavailable.',
  [ErrorCode.TIMEOUT]: 'The request timed out.',
  [ErrorCode.DATABASE_ERROR]: 'A database error occurred.',
};

export const ErrorStatusCodes: Record<ErrorCode, number> = {
  [ErrorCode.BAD_REQUEST]: 400,
  [ErrorCode.VALIDATION_ERROR]: 400,
  [ErrorCode.MISSING_PARAMETERS]: 400,
  [ErrorCode.UNSUPPORTED_MEDIA_TYPE]: 415,
  [ErrorCode.UNPROCESSABLE_ENTITY]: 422,
  [ErrorCode.PAYLOAD_TOO_LARGE]: 413,
  [ErrorCode.FILE_TOO_LARGE]: 413,
  [ErrorCode.UNSUPPORTED_FILE_TYPE]: 415,
  [ErrorCode.UNAUTHORIZED]: 401,
  [ErrorCode.INVALID_CREDENTIALS]: 401,
  [ErrorCode.INVALID_TOKEN]: 401,
  [ErrorCode.EXPIRED_TOKEN]: 401,
  [ErrorCode.FORBIDDEN]: 403,
  [ErrorCode.NOT_FOUND]: 404,
  [ErrorCode.CONFLICT]: 409,
  [ErrorCode.TOO_MANY_REQUESTS]: 429,
  [ErrorCode.INTERNAL_ERROR]: 500,
  [ErrorCode.UNEXPECTED_ERROR]: 500,
  [ErrorCode.DEPENDENCY_FAILURE]: 502,
  [ErrorCode.SERVICE_UNAVAILABLE]: 503,
  [ErrorCode.TIMEOUT]: 504,
  [ErrorCode.DATABASE_ERROR]: 500,
};
